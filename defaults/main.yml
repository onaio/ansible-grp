# git
grp_django_git_key: "'{{ vault_grp_django_git_key }}'"
grp_django_git_key_filename: "git_key"
grp_remove_git_key: true

# OS
ansible_os_family: "Debian"
ansible_ssh_user: ubuntu

# Initial data
grp_load_initial_data: false
grp_initial_data_files:
  - "{{ grp_django_system_user_home }}/app/api/initial_data/users.json"
  - "{{ grp_django_system_user_home }}/app/api/initial_data/box_app_users.json"
  - "{{ grp_django_system_user_home }}/app/api/initial_data/roles.json"
  - "{{ grp_django_system_user_home }}/app/api/initial_data/permissions.json"
  - "{{ grp_django_system_user_home }}/app/api/initial_data/user_roles.json"

# server setup
server_monitoring_set_hostname: True
collectd_version: "5.7.*"
monit_version: "1:5.25.*"
ssh_vault_trusted_user_ca_keys:
  - name: "ona-staging.pem"
    src: "ssh/ona/staging"

# user
grp_django_system_user: "grp"

# Postgres
grp_deploy_postgres: true
grp_postgres_host: "127.0.0.1"
grp_postgres_db: "{{ grp_django_system_user }}"
grp_postgres_user: "{{ grp_django_system_user }}"
grp_postgres_password:

# nginx
deployed_site_name: "grp.stage.ona.io"
grp_use_nginx: True
grp_nginx_first_start: true
grp_nginx_site_names:
  - "{{ deployed_site_name }}"
grp_nginx_api_site_names:
  - "grp-api.stage.ona.io"
grp_nginx_www_site_names:
  - "www.grp.stage.ona.io"
grp_nginx_site_name: "{{ grp_nginx_site_names[0] }}"
grp_nginx_api_site_name: "{{ grp_nginx_api_site_names[0] }}"
grp_nginx_http_site_name: "{{ deployed_site_name }}-http"
grp_nginx_https_site_name: "{{ deployed_site_name }}-https"
grp_nginx_http_api_site_name: "{{ deployed_site_name }}-http-api"
grp_nginx_https_api_site_name: "{{ deployed_site_name }}-https-api"

grp_nginx_enabled_sites:
 - "{{ grp_nginx_http_site_name }}"
 - "{{ grp_nginx_https_site_name }}"
 - "{{ grp_nginx_http_api_site_name }}"
 - "{{ grp_nginx_https_api_site_name }}"
grp_nginx_client_max_body_size: "100M"
grp_nginx_ssl_dir: "/etc/nginx/ssl"
grp_nginx_monit_protection: True
grp_nginx_log_path: "/var/log/nginx"
grp_nginx_large_client_header_buffers: "4 8k"
nginx_basic_auth_files:
  - path: "/etc/nginx/.htpasswd"
    users:
      - username: "grp_mel"
        password: "password"
        state: "present"

grp_nginx_sites:
  - server:
      name: "{{ grp_nginx_http_site_name }}"
      listen:
      - "80"
      - "[::]:80"
      server_name: "{{ grp_nginx_site_names|join(' ') }}"
      rewrite: "^(.*) http://{{ grp_nginx_site_name }}$1 permanent"
      ssl:
        enabled: False
  - server:
      name: "{{ grp_nginx_https_site_name }}"
      listen:
        - "80"
        - "[::]:80"
      server_name: "{{ grp_nginx_site_names|join(' ') }}"
      ssl:
        enabled: False
      location1:
        name: "/"
        client_max_body_size: "{{ grp_nginx_client_max_body_size }}"
        # uwsgi backend
        uwsgi_pass: "unix:{{ grp_django_wsgi_socket }}"
        include: "uwsgi_params"
        proxy_read_timeout: "{{ grp_django_proxy_read_timeout }}"
        uwsgi_read_timeout: "{{ grp_django_proxy_read_timeout }}"
        # no redirects
        proxy_redirect: "off"
        proxy_set_header:
          - Host $host
          - X-Real-IP $remote_addr
          - X-Forwarded-For $proxy_add_x_forwarded_for
          - X-Forwarded-Host $server_name
        # timeouts on unavailable backend(s)
        proxy_next_upstream: "error timeout invalid_header http_500 http_502 http_503 http_504"
      location2:
        name: "/media/"
        autoindex: "off"
        expires: "1y"
        access_log: "off"
        add_header: "Cache-Control public"
        alias: "{{ grp_django_media_path }}"

# django
grp_django_system_group: "www-data"
grp_django_recreate_virtual_env: true
grp_django_system_user_home: "/home/{{ grp_django_system_user }}"
grp_django_codebase_path: "{{ grp_django_system_user_home }}/app"
grp_django_versioned_path: "{{ grp_django_codebase_path }}-versioned"
grp_frontend_app_path: "{{ grp_django_codebase_path}}/frontend"
grp_frontend_app_path_local: "~/Code/Ona/grp-frontend/build"
grp_django_checkout_path: "{{ grp_django_versioned_path }}/{{ ansible_date_time['epoch'] }}"
grp_django_venv_path: "{{ grp_django_system_user_home }}/.virtualenvs/{{ grp_django_system_user }}"
grp_requirements_paths:
  - "{{ grp_django_checkout_path }}/requirements/dev.txt"
grp_django_celery_app: "api"
grp_django_python_source_version: "3.6"
grp_django_python_version: "python3.6"
grp_django_enable_celery: true
grp_django_local_settings_path: "{{ grp_django_checkout_path }}/api/config/settings.py"
grp_django_app_settings_module: "api.config.settings"
grp_django_wsgi_module: "api.config.wsgi:application"
grp_manage_services: True
grp_django_service_name: "{{ grp_django_system_user }}"
grp_django_service_type: "notify"
grp_django_service_restart: "on-failure"
grp_django_service_group: "{{ grp_django_system_group }}"
grp_django_service_unit_after: "network.target"
grp_django_service_install_wantedby: "multi-user.target"
grp_django_pid_socks_dir: "/var/run/{{ grp_django_service_name }}"
grp_django_wsgi_socket: "{{ grp_django_pid_socks_dir }}/{{ grp_django_system_user }}.sock"
grp_django_proxy_read_timeout: "300s"
grp_django_settings_template_path: "templates/grp/local_settings.py.j2"
grp_docs_path: "{{ grp_django_checkout_path }}/api/static/docs"
grp_django_static_path: "/home/{{ grp_django_system_user }}/static"
grp_django_media_path: "/home/{{ grp_django_system_user }}/media"
grp_django_init_commands:
  - check
  - migrate --no-input
grp_django_pip_packages:
  - celery
  - uwsgi
  - redis>3
  - django-debug-toolbar
grp_django_celeryd_nodes: "default-node"
grp_django_celeryd_opts: "--time-limit=300 --concurrency=8"
grp_django_app_settings:
  SECRET_KEY: "'{{ vault_django_secret_key }}'"
  BOX_PUBLIC_USER: "'{{ vault_public_box_user }}'"
  GRP_ROLES_WITH_CAN_SUBMIT_PERMISSION_IN_ONA: "['Partners', 'Grantee']"
  STAGE_DISCOVER_BASE_URL: "'https://stage-superset.ona.io'"
  DISCOVER_BASE_URL: "'https://discover.ona.io'"
  DISCOVER_DASHBOARDS_URL: "'https://discover.ona.io/superset-ketchup/api/all_dashboards/'"
  DISCOVER_LOGIN_URL: "'https://discover.ona.io/oauth-authorized/onadata'"
  DISCOVER_LOGOUT_URL: "'https://discover.ona.io/logout/'"
  SITE_ID: 1
  BOX_FE_REDIRECT_URL: "'https://grp.stage.ona.io/documents/'"
  BOX_CLIENT_ID: "'{{ vault_box_client_id }}'"
  BOX_CLIENT_SECRET: "'{{ vault_box_client_secret }}'"
  GRP_ONA_ORGANIZATION_NAME: "'{{ vault_grp_ona_org_name }}'"
  GRP_ONA_SOLUTIONS_PROJECT_ID: "'{{ vault_grp_ona_solutions_project_id }}'"
  GRP_ONA_INDICATORS_PROJECT_ID: "'{{ vault_grp_ona_indicators_project_id }}'"
  PATH_TO_JWT_CONFIG_FILE: "'/home/grp/app/api/config/jwt_config.json'"
  DATABASES: |
    {
        'default': {
            'ENGINE': 'django.contrib.gis.db.backends.postgis',
            'NAME': '{{ grp_postgres_db }}',
            'USER': '{{ grp_postgres_user }}',
            'PASSWORD': '{{ vault_postgres_password }}',
            'HOST': '{{ grp_postgres_host }}'
        }
    }
  STATICFILES_DIRS: |
    (
        os.path.join(BASE_DIR, "static"),
    )
  CACHES: |
    {
      'default': {
          'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
          'LOCATION': '/var/tmp/grp-stage/grp_django_cache',
          'TIMEOUT': 86400,
          'OPTIONS': {
              'MAX_ENTRIES': 1000
          }
      }
    }
  STATIC_URL: "'/static/'"
  MEDIA_ROOT: "'{{ grp_django_media_path }}'"
  STATIC_ROOT: "'{{ grp_django_static_path }}'"
  ROOT_URLCONF: "'api.config.urls'"
  MEDIA_URL: "'/media/'"
  EMAIL_USE_TLS: True
  EMAIL_HOST: "'smtp.mailgun.org'"
  EMAIL_PORT: "587"
  EMAIL_HOST_USER: "'{{ vault_smtp_login }}'"
  EMAIL_HOST_PASSWORD: "'{{ vault_smtp_password }}'"
  DEFAULT_FROM_EMAIL: "'grp <techops+grp@ona.io>'"
  ONA_BASE_URL: "'https://stage-api.ona.io'"
  ONA_USERNAME: "'grptest'"
  ONA_ORG_NAME: "'grp'"
  ONA_PASSWORD: "'{{ vault_ona_password }}'"
  ONA_CROSS_AUTHENTICATION_URL: "'https://api.ona.io/api/v1/user'"
  ALLAUTH_ONA_BASE_URL: "'https://api.ona.io'"
  ONA_MEMBERS_TEAM_ID: 3381
  BROKER_URL: "'redis://localhost:6379/0'"
  CELERY_RESULT_BACKEND: "'redis://localhost:6379/0'"
  WHITENOISE_KEEP_ONLY_HASHED_FILES: True
  ALLOWED_HOSTS: "[
                          '{{ grp_nginx_site_names[0] }}',
                          '127.0.0.1',
                        ]"
  CORS_ORIGIN_WHITELIST: |
    (
        "{{ grp_nginx_site_names[0] }}",
        "localhost:3000",
    )

  DEBUG: False
  AUTO_CREATE_SUBMISSION_WEBHOOKS: False
  AUTO_CREATE_FILTERED_DATASETS: False
  INSTALLED_APPS: "[
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_filters',
    'corsheaders',
    'oauth2_provider',
    'reversion',
    'rest_framework.authtoken',
    'rest_auth',
    'raven.contrib.django.raven_compat',
    'api.users',
    'api.roles',
    'api.initial_data',
    'api.utils',
    'api.common',
    'api.box',
    'api.forms',
    ]"
  PERMISSIONS: |
    (
       ('report_on_solutions', 'Can report on solutions'),
       ('view_collected_data', 'Can view the collected Data in Ona'),
       ('form_creation', 'Can create a form in Ona'),
       ('view_reporting_forms', 'Can view the form templates'),
       ('excel_import_data', 'Can import data in Ona'),
       ('view_indicator_dashboard', 'Can view the indicators dashboard'),
       ('view_indicator_table', 'Can view the indicators table'),
       ('open_indicator_dashboard', 'Can open indicators in Canopy'),
       ('build_indicator_dashboard', 'Can build indicators in canopy'),
       ('access_to_box', 'Can access box.com'),
       ('view_download_public_documents', 'Can view and download public documents'),
       ('search_project_solution', 'Can search solutions'),
       ('submit_solution', 'Can submit solution'),
       ('approve_reject_solution', 'Can approve or reject solution'),
       ('view_approved_project_solution', 'Can view approved projects'),
       ('view_rejected_project_solution', 'Can view rejected solutions'),
       ('publish_solution_on_social_media', 'Can publish solution in social media'),
       ('user_creation', 'Can manage users'),
       ('user_permissions', 'Can manage roles and permissions'),
    )
  SOLUTION_THEMES: |
    (
      ('agriculture', 'Agriculture'),
      ('community', 'Community'),
      ('education', 'Education'),
      ('energy', 'Energy'),
      ('environment', 'Environment'),
      ('financialservices', 'Financial Services'),
      ('genderequity', 'Gender Equity'),
      ('general', 'General'),
      ('health', 'Health'),
      ('humanitarian', 'Humanitarian'),
      ('humanrights', 'Human Rights'),
      ('livelihood', 'Livelihood'),
      ('poverty', 'Poverty'),
      ('shelter', 'Shelter'),
      ('water', 'Water'),
    )
  SOLUTION_PARTNERS: |
    (
      ('WFP', 'World Food Programme'),
      ('CARE', ' Cooperative for Assistance and Relief Everywhere'),
      ('OXFARM', ' Oxfam International'),
      ('IFRC', 'International Federation of Red Cross and Red Crescent Societies'),
      ('AAH', 'Action Against Hunger'),
      ('RI', 'Refugees International'),
      ('IMF', 'International Monetary Fund'),
    )
  FILE_UPLOAD_TYPES: |
    (('image', 'Image'), ('document', 'Document'))
  ALLOWED_FILE_EXTENSIONS: |
    (
      ('png', 'PNG'),
      ('jpeg', 'JPGEG'),
      ('pdf', 'PDF'),
      ('txt', 'TXT'),
    )
  LOGIN_REDIRECT_URL: "'/'"
  EMAIL_BACKEND: "'django.core.mail.backends.smtp.EmailBackend'"
  FRONTEND_URL: "'http: //localhost: 3000/'"
  REST_SESSION_LOGIN:  True
  ACCOUNT_EMAIL_REQUIRED:  False
  ACCOUNT_AUTHENTICATION_METHOD: "'username'"
  ACCOUNT_EMAIL_VERIFICATION: "'optional'"
  PASSWORD_RESET_TIMEOUT_DAYS: "1"
  RAVEN_CONFIG: |
    {
      'dsn': '{{ vault_grp_sentry_dsn }}',
      'release': raven.fetch_git_sha(os.path.dirname(os.pardir)),
    }
  MAP_USER_TO_ONA: True
  USE_DEFAULT_PASSWORD: True  # This is just for testing
  DEFAULT_PASSWORD: "'password'"
  ONA_SETTINGS: |
    {
      'URLS': {
        'profiles': 'https://stage-api.ona.io/api/v1/profiles',
        'users': 'https://stage-api.ona.io/api/v1/users',
        'orgs': 'https://stage-api.ona.io/api/v1/orgs',
        'token_url': 'https://stage-api.ona.io/o/token/',
        'dataviews': 'https://stage-api.ona.io/api/v1/dataviews/',
        'data':'https://stage-api.ona.io/api/v1/data/',
      },
      'TOKEN': '7c8d9d70b3e8dd89f61bc1eff5808fe9a165f5af',
      'GRP_ORG_NAME': 'grp_test',
      'OAUTH': {'client_id': 'GRP', 'client_secret': 'GRP'},
      }
  ONA_FORMS_URLS: |
    {
      'round_1':'https://stage.ona.io/grp_god_user/407/930/webform',
      'round_2':'https://stage.ona.io/grp_god_user/407/962/webform',
      'solution_template':'https://stage.ona.io/grp_mel/409/1018/webform',
      'round_1_submissions_zebra':'https://stage.ona.io/grp_god_user/407/930#/table',
      'round_2_submissions_zebra':'https://stage.ona.io/grp_god_user/407/962#/table',
      'solutions_submissions_zebra':'https://stage.ona.io/grp_god_user/407/1018#/table',
      'round_1_submissions_api':'https://stage-api.ona.io/api/v1/data/930?query=&sort=%7B%22_submission_time%22%3A1%7D',
      'round_2_submissions_api':'https://stage-api.ona.io/api/v1/data/962?start=0&limit=100&sort=%7B%22_submission_time%22%3A1%7D&query=',
      'solutions_submissions_api':'https://stage-api.ona.io/api/v1/data/1018',
      'solutions_submissions_form_api':'https://stage-api.ona.io/api/v1/forms/1018',
      'round_1_submissions_data_import':'https://stage.ona.io/grp_god_user/407/930#/overview',
      'round_2_submissions_data_import':'https://stage.ona.io/grp_god_user/407/962#/overview',
      'solutions_submissions_data_import':'https://stage.ona.io/grp_mel/407/1018#/overview',
      'form_authoring':'https://stage.ona.io/grp_mel/407',
      'project':'https://stage-api.ona.io/api/v1/projects/407'
    }
  WEB_SOCKET_PORT: "8765"
  OAUTH_REDIRECT_URL: "'https://grp.stage.ona.io/api/v1/login/'"
  GRP_COOKIE_LENGTH: "50"
  GRP_COOKIE_AUTH_HEADER: "'GRPAUTH'"
  OAUTH_CLIENT_ID: "'{{ vault_oauth_client_id }}'"
  OAUTH_CLIENT_SECRET: "'{{ vault_oauth_client_secret }}'"
  OAUTH_FE_REDIRECT_URL: "'https://grp.stage.ona.io/login/'"
  AUTHENTICATION_BACKENDS: "'api.common.authentication.OnadataBackend'"
  SESSION_COOKIE_NAME: "'sessionid'"
  FORMS_LABEL_NAMES_MAP: |
    {
      'title': 'qn01',
      'theme': 'qn02',
      'region': 'qn04',
      'country': 'qn06',
      'partner': 'qn07'
      }
  MIDDLEWARE: "[
   'corsheaders.middleware.CorsMiddleware',
   'django.middleware.common.CommonMiddleware',
   'django.middleware.security.SecurityMiddleware',
   'django.contrib.sessions.middleware.SessionMiddleware',
   'django.middleware.common.CommonMiddleware',
   'django.middleware.csrf.CsrfViewMiddleware',
   'django.contrib.auth.middleware.AuthenticationMiddleware',
   'django.contrib.messages.middleware.MessageMiddleware',
   'django.middleware.clickjacking.XFrameOptionsMiddleware',
   'reversion.middleware.RevisionMiddleware',
   ]"
  TEMPLATES: "[
    {
      'BACKEND': 'django.template.backends.django.DjangoTemplates',
      'DIRS': [os.path.join(BASE_DIR, 'templates')],
      'APP_DIRS': True,
      'OPTIONS': {
        'context_processors': [
          'django.template.context_processors.debug',
          'django.template.context_processors.request',
          'django.contrib.auth.context_processors.auth',
          'django.contrib.messages.context_processors.messages',
          'api.common.settings_in_templates.settings_in_templates',
        ]
      },
    }
    ]"
  WSGI_APPLICATION: "'api.config.wsgi.application'"
  AUTH_PASSWORD_VALIDATORS: "[
    {
      'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
    },
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {
      'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'
    },
  ]"
  LANGUAGE_CODE: "'en-us'"
  TIME_ZONE: "'UTC'"
  USE_I18N: True
  USE_L10N: True
  USE_TZ: True
  AUTH_USER_MODEL: "'users.GrpUser'"
  REST_FRAMEWORK: |
    {
      'PAGE_SIZE': 10,
      'EXCEPTION_HANDLER': 'rest_framework_json_api.exceptions.exception_handler',
      'DEFAULT_PAGINATION_CLASS': 'api.utils.pagination.GrpPagination',
      'DEFAULT_PARSER_CLASSES': (
                                  'rest_framework_json_api.parsers.JSONParser',
                                  'rest_framework.parsers.FormParser',
                                  'rest_framework.parsers.MultiPartParser',
                                  'rest_framework.parsers.JSONParser',
      ),
      'DEFAULT_RENDERER_CLASSES': (
                                    'rest_framework_json_api.renderers.JSONRenderer',
                                    'rest_framework.renderers.JSONRenderer',
                                    'rest_framework.renderers.BrowsableAPIRenderer',
      ),
      'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
      'DEFAULT_FILTER_BACKENDS': (
                                   'rest_framework.filters.OrderingFilter',
                                   'django_filters.rest_framework.DjangoFilterBackend',
                                   'rest_framework.filters.SearchFilter',
      ),
      'SEARCH_PARAM': 'search',
      'TEST_REQUEST_RENDERER_CLASSES': (
                                         'rest_framework_json_api.renderers.JSONRenderer',
      ),
      'TEST_REQUEST_DEFAULT_FORMAT': 'vnd.api+json',
      'DEFAULT_PERMISSION_CLASSES': ('api.common.permissions.GRPPermissions',),
      'DEFAULT_AUTHENTICATION_CLASSES': (
                                          'api.utils.authentication.CsrfExemptSessionAuthentication',
                                          'api.common.authentication.OnadataBackend',
      ),
    }
  OAUTH2_PROVIDER: |
   {
    'SCOPES': {
      'read': 'Read scope',
      'write': 'Write scope',
      'groups': 'Access to your groups',
    }
   }
  MAX_PAGE_SIZE: "'100'"


grp_django_git_url: "git@github.com:onaio/grp-backend.git"
grp_django_git_version: "'{{ vault_grp_django_git_version }}'"
grp_django_grp_use_regular_old_pip: false
grp_django_grp_use_pipenv: true
grp_django_system_wide_dependencies:
  - build-essential
  - git
  - python3.6-dev
  - binutils
  - libproj-dev
  - gdal-bin
  - python-gdal
  - libgeoip1
  - python3-distutils
  - libpq-dev

grp_django_top_python_statements:
  - import os
  - import raven
  - from celery.schedules import crontab
  - BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
## python statements included at the bottom of settings file
grp_django_bottom_python_statements:
  - CSRF_TRUSTED_ORIGINS = CORS_ORIGIN_WHITELIST

# grp_react
grp_react_system_user: "{{ grp_django_system_user }}"
grp_react_system_group: "{{ grp_django_system_group }}"
grp_react_system_user_home: "/home/{{ grp_django_system_user }}/react"
grp_react_system_wide_dependencies:
  - git
  - nodejs
  - yarn
grp_react_codebase_path: "{{ grp_react_system_user_home }}/app"
grp_react_versioned_path: "{{ grp_react_codebase_path }}-versioned"
grp_react_node_version: "10.x"
grp_react_git_url: "git@github.com:onaio/grp-frontend.git"
grp_react_git_version: "'{{ vault_grp_react_git_version }}'"
grp_react_git_key: "{{ grp_django_git_key }}"
grp_react_git_key_ssh_file: "{{ grp_django_git_key_ssh_file }}"
grp_react_git_key_filename: "{{ grp_django_git_key_filename }}"
grp_react_remove_git_key: True
grp_react_remote_js_build: yes
grp_react_app_settings:
  REACT_APP_WEBSITE_NAME: "{{ grp_django_system_user }}"
  REACT_APP_ENDPOINT: "https://grp.stage.ona.io/api/v1"
  REACT_APP_API_TOKEN:  "{{ vault_react_app_token }}"
  REACT_APP_GRP_BACKEND_CLIENT_ID: "GRP_BACKEND"
  REACT_APP_ZEBRA_DOMAIN_NAME: 'https://stage.ona.io'
  GENERATE_SOURCEMAP: false
  REACT_APP_ONA_WEBSITE: 'https://stage.ona.io/'
  REACT_APP_BOX_OAUTH_CLIENT_ID: "{{ vault_box_client_id }}"
  REACT_APP_SOLUTIONS_FORMS_PROJECT_ID: "{{ vault_solutions_project_id }}"
  REACT_APP_SOLUTION_FORM_ID: "{{ vault_solutions_form_id }}"
  REACT_APP_APPROVED_SOLUTION_FORM_ID:  "'{{ vault_approved_solutions_form_id }}'"
  REACT_APP_REJECTED_SOLUTION_FORM_ID: "'{{ vault_rejected_solutions_form_id }}'"

# Certbot
grp_use_certbot: True
grp_certbot_create_certs: True
grp_certbot_mail_address: "techops+grp@ona.io"
grp_certbot_renew_certs: True
grp_certbot_install_cert: True
grp_certbot_site_names:
  - "grp.stage.ona.io"

# redis
grp_redis_bind: "0.0.0.0"
grp_redis_port: "6379"
grp_redis_password: False
grp_redis_version: "5.0.3"
grp_redis_install_dir: "/opt/redis"
grp_redis_dir: "/var/lib/grp_redis/{{ grp_redis_port }}"
grp_redis_verify_checksum: False
grp_redis_tarball: False
grp_redis_make_32bit: False
grp_redis_user: "redis"
grp_redis_group: "{{ grp_redis_user }}"
grp_redis_nofile_limit: "16384"
grp_redis_as_service: True
grp_redis_local_facts: True
grp_redis_service_name: "redis_6379"
grp_redis_min_slaves_to_write: "0"
grp_redis_min_slaves_max_lag: "10"
grp_redis_tcp_backlog: "511"
grp_redis_tcp_keepalive: "0"
grp_redis_maxclients: "10000"
grp_redis_timeout: "0"
grp_redis_socket_path: "False"
grp_redis_socket_perm: "755"
# sentry
sentry_dsn: "{{ vault_grp_sentry_dsn }}"
