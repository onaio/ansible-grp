---
- name: Pre-install stuff
  hosts: all
  tasks:
    - name: Install python 2 if not there
      raw: |
        test -e /usr/bin/python || \
        (apt -y update && apt install -y  python-minimal)
      register: output
      changed_when: output.stdout|trim() != ""
    - name: Install sudo if not there
      raw: |
        test -e /usr/bin/sudo || apt install -y sudo
      register: output
      changed_when: output.stdout|trim() != ""
  gather_facts: false
  become: true

- name: Test grp role
  hosts: all
  vars:
    # postgres
    grp_deploy_postgres: true
    grp_postgres_db: "grp"
    grp_postgres_user: "grp"
    # django
    grp_django_system_group: "www-data"
    grp_django_recreate_virtual_env: true
    grp_django_system_user_home: "/home/{{ grp_django_system_user }}"
    grp_django_codebase_path: "{{ grp_django_system_user_home }}/app"
    grp_django_versioned_path: "{{ grp_django_codebase_path }}-versioned"
    grp_frontend_app_path: "{{ grp_django_codebase_path}}/frontend"
    grp_frontend_app_path_local: "~/Code/Ona/grp-frontend/build"
    grp_django_checkout_path: "{{ grp_django_versioned_path }}/{{ ansible_date_time['epoch'] }}"
    grp_django_venv_path: "{{ grp_django_system_user_home }}/.virtualenvs/{{ grp_django_system_user }}"
    grp_requirements_paths:
    - "{{ grp_django_checkout_path }}/requirements/dev.txt"
    grp_django_celery_app: "api"
    grp_django_python_source_version: "3.6"
    grp_django_python_version: "python3.6"
    grp_django_enable_celery: true
    grp_django_local_settings_path: "{{ grp_django_checkout_path }}/api/config/settings.py"
    grp_django_app_settings_module: "api.config.settings"
    grp_django_wsgi_module: "api.config.wsgi:application"
    grp_manage_services: True
    grp_django_service_name: "{{ grp_django_system_user }}"
    grp_django_service_type: "notify"
    grp_django_service_restart: "on-failure"
    grp_django_service_group: "{{ grp_django_system_group }}"
    grp_django_service_unit_after: "network.target"
    grp_django_service_install_wantedby: "multi-user.target"
    grp_django_pid_socks_dir: "/var/run/{{ grp_django_service_name }}"
    grp_django_wsgi_socket: "{{ grp_django_pid_socks_dir }}/{{ grp_django_system_user }}.sock"
    grp_django_proxy_read_timeout: "300s"
    grp_django_settings_template_path: "{{ grp_django_settings_template }}"
    grp_docs_path: "{{ grp_django_checkout_path }}/api/static/docs"
    grp_django_static_path: "/home/{{ grp_django_system_user }}/static"
    grp_django_media_path: "/home/{{ grp_django_system_user }}/media"
    grp_django_init_commands:
    - check
    - migrate --no-input
    grp_django_pip_packages:
    - celery
    - uwsgi
    - redis>3
    - django-debug-toolbar==2.2
    grp_django_celeryd_nodes: "default-node"
    grp_django_celeryd_opts: "--time-limit=300 --concurrency=8"
    grp_django_app_settings:
      SECRET_KEY: "'{{ vault_django_secret_key }}'"
      SITE_ID: 1
      DATABASES: |
        {
            'default': {
                'ENGINE': 'django.contrib.gis.db.backends.postgis',
                'NAME': '{{ grp_postgres_db }}',
                'USER': '{{ grp_postgres_user }}',
                'PASSWORD': '{{ vault_postgres_password }}',
                'HOST': '{{ grp_postgres_host }}'
            }
        }
      STATICFILES_DIRS: |
        (
            os.path.join(BASE_DIR, "static"),
        )
      CACHES: |
        {
          'default': {
              'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
              'LOCATION': '/var/tmp/grp-production/grp_django_cache',
              'TIMEOUT': 86400,
              'OPTIONS': {
                  'MAX_ENTRIES': 1000
              }
          }
        }

      STATIC_URL: "'/static/'"
      MEDIA_ROOT: "'{{ grp_django_media_path }}'"
      ROOT_URLCONF: "'api.config.urls'"
      MEDIA_URL: "'/media/'"
      EMAIL_USE_TLS: True
      EMAIL_HOST: "'smtp.mailgun.org'"
      EMAIL_PORT: "587"
      EMAIL_HOST_USER: "'{{ vault_smtp_login }}'"
      EMAIL_HOST_PASSWORD: "'{{ vault_smtp_password }}'"
      DEFAULT_FROM_EMAIL: "'grp <techops+grp@ona.io>'"
      ONA_BASE_URL: "'https://grp-api.ona.io'"
      ONA_USERNAME: "'grptest'"
      ONA_ORG_NAME: "'grp'"
      ONA_PASSWORD: "'{{ vault_ona_password }}'"
      ONA_CROSS_AUTHENTICATION_URL: "'https://grp-api.ona.io/api/v1/user'"
      ALLAUTH_ONA_BASE_URL: "'https://grp-api.ona.io'"
      ONA_MEMBERS_TEAM_ID: 3381
      BROKER_URL: "'redis://localhost:6379/0'"
      CELERY_RESULT_BACKEND: "'redis://localhost:6379/0'"
      WHITENOISE_KEEP_ONLY_HASHED_FILES: True
      ALLOWED_HOSTS: "[
                                    '{{ grp_nginx_site_names[0] }}',
                                    '127.0.0.1',
                                  ]"
      CORS_ORIGIN_WHITELIST: |
        (
            "{{ grp_nginx_site_names[0] }}",
        )

      DEBUG: False
      AUTO_CREATE_SUBMISSION_WEBHOOKS: False
      AUTO_CREATE_FILTERED_DATASETS: False
      INSTALLED_APPS: "[
              'django.contrib.admin',
              'django.contrib.auth',
              'django.contrib.contenttypes',
              'django.contrib.sessions',
              'django.contrib.messages',
              'django.contrib.staticfiles',
              'rest_framework',
              'django_filters',
              'corsheaders',
              'oauth2_provider',
              'reversion',
              'rest_framework.authtoken',
              'rest_auth',
              'raven.contrib.django.raven_compat',
              'api.users',
              'api.roles',
              'api.initial_data',
              'api.utils',
              'api.common',
              'api.box',
              'api.forms',
              ]"
      PERMISSIONS: |
        (
          ("user_creation", "Can manage users"),
          ("user_permissions", "Can manage roles and permissions"),
          ("solutions_dataentry", "Can submit and view own data"),
          ("indicators_dataentry", "Can submit and view own data"),
          ("solutions_owner", "Can manage all data"),
          ("indicators_owner", "Can manage all data"),
          ("solutions_readonly-no-download", "Can only view data"),
          ("indicators_readonly-no-download", "Can only view data"),
          ("solutions_readonly", "Can view and download data"),
          ("indicators_readonly", "Can view and download data"),
        )
      FILE_UPLOAD_TYPES: |
        (('image', 'Image'), ('document', 'Document'))
      ALLOWED_FILE_EXTENSIONS: |
        (
          ('png', 'PNG'),
          ('jpeg', 'JPGEG'),
          ('pdf', 'PDF'),
          ('txt', 'TXT'),
        )
      LOGIN_REDIRECT_URL: "'/'"
      EMAIL_BACKEND: "'django.core.mail.backends.smtp.EmailBackend'"
      FRONTEND_LOGIN_URL: "'https://grp-ona.ona.io/onadata-oauth-login-redirect/?client_id=GRP_BACKEND'"
      REST_SESSION_LOGIN:  True
      ACCOUNT_EMAIL_REQUIRED:  False
      ACCOUNT_AUTHENTICATION_METHOD: "'username'"
      ACCOUNT_EMAIL_VERIFICATION: "'optional'"
      PASSWORD_RESET_TIMEOUT_DAYS: "1"
      RAVEN_CONFIG: |
        {
          'dsn': '',
          'release': raven.fetch_git_sha(os.path.dirname(os.pardir)),
        }
      MAP_USER_TO_ONA: True
      USE_DEFAULT_PASSWORD: True  # This is just for testing
      DEFAULT_PASSWORD: "'password'"
      ONA_SETTINGS: |
        {
          'URLS': {
            'profiles': 'https://grp-api.ona.io/api/v1/profiles',
            'user': 'https://grp-api.ona.io/api/v1/user',
            'users': 'https://grp-api.ona.io/api/v1/users',
            'orgs': 'https://grp-api.ona.io/api/v1/orgs',
            'token_url': 'https://grp-api.ona.io/o/token/',
            'dataviews': 'https://grp-api.ona.io/api/v1/dataviews/',
            'data': 'https://grp-api.ona.io/api/v1/data/',
            'forms': 'https://grp-api.ona.io/api/v1/forms',
          },
          'TOKEN': "{{ vault_grp_ona_org_admin_user_api_token }}",
          'GRP_ORG_NAME': 'grp',
          'GRP_ORG_ADMIN_USER_NAME': 'grp_mel',
          'OAUTH': {'client_id': 'GRP', 'client_secret': 'GRP'},
          }
      BOX_SETTINGS: |
        {
          'boxAppSettings':{
            'clientID':'',
            'clientSecret':'',
            'appAuth':{'publicKeyID':'', 'privateKey':'', 'passphrase':''},
          },
          'enterpriseID':'',
          'BOX_PUBLIC_USER_ID':'',
        }
      WEB_SOCKET_PORT: "8765"
      OAUTH_REDIRECT_URL: "'https://grp.ona.io/api/v1/login/'"
      GRP_COOKIE_LENGTH: "50"
      GRP_COOKIE_AUTH_HEADER: "'GRPAUTH'"
      OAUTH_CLIENT_ID: "''"
      OAUTH_CLIENT_SECRET: "''"
      OAUTH_FE_REDIRECT_URL: "'https://grp.ona.io/login/'"
      AUTHENTICATION_BACKENDS: "'api.common.authentication.OnadataBackend'"
      SESSION_COOKIE_NAME: "'sessionid'"
      FORMS_LABEL_NAMES_MAP: |
        {
          'title': 'qn01',
          'theme': 'qn02',
          'region': 'qn04',
          'country': 'qn06',
          'partner': 'qn07'
          }
      MIDDLEWARE: "[
             'corsheaders.middleware.CorsMiddleware',
             'django.middleware.common.CommonMiddleware',
             'django.middleware.security.SecurityMiddleware',
             'django.contrib.sessions.middleware.SessionMiddleware',
             'django.middleware.common.CommonMiddleware',
             'django.middleware.csrf.CsrfViewMiddleware',
             'django.contrib.auth.middleware.AuthenticationMiddleware',
             'django.contrib.messages.middleware.MessageMiddleware',
             'django.middleware.clickjacking.XFrameOptionsMiddleware',
             'reversion.middleware.RevisionMiddleware',
             ]"
      TEMPLATES: "[
              {
                'BACKEND': 'django.template.backends.django.DjangoTemplates',
                'DIRS': [os.path.join(BASE_DIR, 'templates')],
                'APP_DIRS': True,
                'OPTIONS': {
                  'context_processors': [
                    'django.template.context_processors.debug',
                    'django.template.context_processors.request',
                    'django.contrib.auth.context_processors.auth',
                    'django.contrib.messages.context_processors.messages',
                    'api.common.settings_in_templates.settings_in_templates',
                  ]
                },
              }
              ]"
      WSGI_APPLICATION: "'api.config.wsgi.application'"
      AUTH_PASSWORD_VALIDATORS: "[
              {
                'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'
              },
              {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
              {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
              {
                'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'
              },
            ]"
      LANGUAGE_CODE: "'en-us'"
      TIME_ZONE: "'UTC'"
      USE_I18N: True
      USE_L10N: True
      USE_TZ: True
      AUTH_USER_MODEL: "'users.GrpUser'"
      REST_FRAMEWORK: |
        {
          'PAGE_SIZE': 10,
          'EXCEPTION_HANDLER': 'rest_framework_json_api.exceptions.exception_handler',
          'DEFAULT_PAGINATION_CLASS': 'api.utils.pagination.GrpPagination',
          'DEFAULT_PARSER_CLASSES': (
                                      'rest_framework_json_api.parsers.JSONParser',
                                      'rest_framework.parsers.FormParser',
                                      'rest_framework.parsers.MultiPartParser',
                                      'rest_framework.parsers.JSONParser',
          ),
          'DEFAULT_RENDERER_CLASSES': (
                                        'rest_framework_json_api.renderers.JSONRenderer',
                                        'rest_framework.renderers.JSONRenderer',
                                        'rest_framework.renderers.BrowsableAPIRenderer',
          ),
          'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
          'DEFAULT_FILTER_BACKENDS': (
                                       'rest_framework.filters.OrderingFilter',
                                       'django_filters.rest_framework.DjangoFilterBackend',
                                       'rest_framework.filters.SearchFilter',
          ),
          'SEARCH_PARAM': 'search',
          'TEST_REQUEST_RENDERER_CLASSES': (
                                             'rest_framework_json_api.renderers.JSONRenderer',
          ),
          'TEST_REQUEST_DEFAULT_FORMAT': 'vnd.api+json',
          'DEFAULT_PERMISSION_CLASSES': ('api.common.permissions.GRPPermissions',),
          'DEFAULT_AUTHENTICATION_CLASSES': (
                                              'api.utils.authentication.CsrfExemptSessionAuthentication',
                                              'api.common.authentication.OnadataBackend',
          ),
        }
      OAUTH2_PROVIDER: |
        {
         'SCOPES': {
           'read': 'Read scope',
           'write': 'Write scope',
           'groups': 'Access to your groups',
         }
        }
      MAX_PAGE_SIZE: "'100'"


    grp_django_git_url: "git@github.com:onaio/grp-backend.git"
    grp_django_git_version: "'{{ vault_grp_django_git_version }}'"
    grp_django_grp_use_regular_old_pip: false
    grp_django_grp_use_pipenv: true
    grp_django_system_wide_dependencies:
    - build-essential
    - git
    - python3.6-dev
    - binutils
    - libproj-dev
    - gdal-bin
    - python-gdal
    - libgeoip1
    - python3-distutils
    - libpq-dev

    grp_django_top_python_statements:
    - import os
    - import raven
    - from celery.schedules import crontab
    - BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    ## python statements included at the bottom of settings file
    grp_django_bottom_python_statements:
    - CSRF_TRUSTED_ORIGINS = CORS_ORIGIN_WHITELIST

    # react
    grp_react_system_user: "{{ grp_django_system_user }}"
    grp_react_system_group: "{{ grp_django_system_group }}"
    grp_react_system_user_home: "/home/{{ grp_django_system_user }}/react"
    grp_react_system_wide_dependencies:
    - git
    - nodejs
    - yarn
    grp_react_codebase_path: "{{ grp_react_system_user_home }}/app"
    grp_react_versioned_path: "{{ grp_react_codebase_path }}-versioned"
    grp_react_node_version: "10.x"
    grp_react_git_url: "git@github.com:onaio/grp-frontend.git"
    grp_react_git_version: "'{{ vault_grp_react_git_version }}'"
    grp_react_git_key: "{{ grp_django_git_key }}"
    grp_react_git_key_ssh_file: "{{ grp_django_git_key_ssh_file }}"
    grp_react_git_key_filename: "{{ grp_django_git_key_filename }}"
    grp_react_remove_git_key: True
    grp_react_app_settings:
      REACT_APP_WEBSITE_NAME: "{{ grp_django_system_user }}"
      REACT_APP_ENDPOINT: "http://127.0.0.1:8888/api/v1"
      GENERATE_SOURCEMAP: false
      REACT_APP_ONA_WEBSITE: 'https://grp-ona.ona.io/'
    # nginx
    deployed_site_name: "grp.ona.io"
    grp_use_nginx: True
    grp_nginx_first_start: true
    grp_nginx_site_names:
      - "{{ deployed_site_name }}"
  gather_facts: true
  become: true
  roles:
    - name: "grp"
      role: ../..
    - name: "Setup nginx"
      role: nginx
      become: true
      become_user: "root"
      vars:
        nginx_sites: "{{ grp_nginx_sites }}"
        nginx_install_method: "package"
        nginx_enabled_sites: "{{ grp_nginx_enabled_sites }}"
        nginx_default_enable: false
        monit_protection: "{{ grp_nginx_monit_protection }}"
        nginx_log_dir: "{{ grp_nginx_log_path }}"
        nginx_large_client_header_buffers: "{{ grp_nginx_large_client_header_buffers }}"
        nginx_first_start: "{{ grp_nginx_first_start }}"
      tags:
        - nginx
      when:
        - grp_use_nginx == True
